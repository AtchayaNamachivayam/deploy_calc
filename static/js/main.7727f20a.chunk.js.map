{"version":3,"sources":["serviceWorker.js","index.js","App.js","component/keyPadComponent.jsx","component/resultComponent.jsx"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_this","Object","D_react_deploy_calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_react_deploy_calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_react_deploy_calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","userDetail","clickButton","getValue","console","log","state","isError","setState","result","calculate","clear","backSpace","symbols","indexOf","convertString","toString","slice","eval","e","react__WEBPACK_IMPORTED_MODULE_5___default","className","_component_resultComponent__WEBPACK_IMPORTED_MODULE_8__","getResult","_component_keyPadComponent__WEBPACK_IMPORTED_MODULE_7__","onClick","map","x","index","Fragment","key","name","age","React","Component","KeyPadComponent","value","props","target","ResultComponent"],"mappings":"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","file":"static/js/main.7727f20a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n\n\n","import React from 'react';\nimport './App.css';\n\nimport KeyPadComponent from './component/keyPadComponent';\nimport ResultComponent from './component/resultComponent';\nimport { isFlowPredicate } from '@babel/types';\n\n\n\n\nclass App extends React.Component {\n // userDetail = [{name:'Atchaya',age:'27'},{name:'Viji',age:'27'},{name:'Ishu',age:'27'}];\n userDetail = null;\n  constructor(){\n    super();\n\n    this.state = {\n      result :'',\n      symbols:['+','-','*','/'],\n      isError:false\n    }\n\n  }\n \n  clickButton = (getValue) => {\n    console.log(this.state.isError)\n\n    if(this.state.isError){\n      this.setState({\n        result:'as',\n        isError:false\n      })\n      console.log(this.state.result,'dfg')\n    }\n    console.log(this.state.result)\n    if(getValue === '='){\n      this.calculate()\n    }\n    else if(getValue === 'C'){\n      this.clear()\n    }\n    else if(getValue === 'bs'){\n      this.backSpace()\n    }\n    else{\n      \n        this.setState({\n          result:  this.state.result+getValue\n        })\n     \n        \n        if(this.state.symbols.indexOf(getValue) !== -1){\n        \n          let convertString = this.state.result.toString();\n         \n           if(this.state.symbols.indexOf(convertString.slice(-1)) !== -1){\n           \n             let a = convertString.slice(0,-1);\n             this.setState({\n               result:  a+getValue\n             })\n\n          }\n         \n       }\n    }\n    \n  }\n  \n  calculate = () => {\n    \n    try {\n        this.setState({\n          result:eval(this.state.result)\n        })\n    } \n    catch (e) {\n          this.setState({\n              result: \"error\",\n              isError:true\n          })\n    }\n\n  }\n\n  clear = () => {\n    this.setState({\n      result:''\n    })\n  }\n\n  backSpace = () => {\n    let a = this.state.result.toString();\n    a = a.slice(0,-1)\n\n    this.setState({\n      result:a\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"calcParent\">\n        <h1>Calculator</h1>\n        <ResultComponent getResult = {this.state.result}/>\n        <KeyPadComponent onClick={this.clickButton}/>\n        {(this.userDetail || []).map((x ,index)=> {\n          return(\n            <React.Fragment key={index}>\n              <div>{x.name}</div>\n              <div>{x.age}</div>\n              <div>{index}</div>\n            </React.Fragment>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass KeyPadComponent extends Component{\r\n\r\n    render(){\r\n        return (\r\n           \r\n               <div className='keyPadParent'>\r\n                    <button value='(' onClick={e => this.props.onClick(e.target.value)}>(</button> \r\n                    <button value=')' onClick={e => this.props.onClick(e.target.value)}>)</button>\r\n                    <button value='bs' onClick={e => this.props.onClick(e.target.value)}>&larr;</button>\r\n                    <button value='C' onClick={e => this.props.onClick(e.target.value)}>C</button>\r\n\r\n                    <button value='7' onClick={e => this.props.onClick(e.target.value)}>7</button>\r\n                    <button value='8' onClick={e => this.props.onClick(e.target.value)}>8</button>\r\n                    <button value='9' onClick={e => this.props.onClick(e.target.value)}>9</button>\r\n                    <button value='+' onClick={e => this.props.onClick(e.target.value)}>+</button>\r\n\r\n                    <button value='4' onClick={e => this.props.onClick(e.target.value)}>4</button>\r\n                    <button value='5' onClick={e => this.props.onClick(e.target.value)}>5</button>\r\n                    <button value='6' onClick={e => this.props.onClick(e.target.value)}>6</button>\r\n                    <button value='-' onClick={e => this.props.onClick(e.target.value)}>-</button>\r\n\r\n                    <button value='1' onClick={e => this.props.onClick(e.target.value)}>1</button>\r\n                    <button value='3' onClick={e => this.props.onClick(e.target.value)}>2</button>\r\n                    <button value='2' onClick={e => this.props.onClick(e.target.value)}>3</button>\r\n                    <button value='/' onClick={e => this.props.onClick(e.target.value)}>/</button>\r\n\r\n                    <button value='0' onClick={e => this.props.onClick(e.target.value)}>0</button>\r\n                    <button value='.' onClick={e => this.props.onClick(e.target.value)}>.</button>\r\n                    <button value='=' onClick={e => this.props.onClick(e.target.value)}>=</button>\r\n                    <button value='*' onClick={e => this.props.onClick(e.target.value)}>*</button>\r\n\r\n               </div>\r\n           \r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default KeyPadComponent;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass ResultComponent extends Component{\r\n   \r\n    render(){\r\n        let {getResult} = this.props;\r\n        return(\r\n            <div className='resultParent'>\r\n                <p>{getResult}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultComponent;"],"sourceRoot":""}